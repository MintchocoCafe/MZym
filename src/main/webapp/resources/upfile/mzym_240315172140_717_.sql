-----------------해당 계정 내에 존재하는 DB 객체들 삭제하는 PLSQL문------------------
-- 해당 계정의 모든 트리거 삭제
BEGIN
FOR C IN (SELECT * FROM USER_TRIGGERS) LOOP
  EXECUTE IMMEDIATE 'DROP TRIGGER '||C.TRIGGER_NAME;
END LOOP;
END;
/
--해당 계정의 모든테이블 및 제약조건 삭제
BEGIN
    FOR C IN (SELECT * FROM USER_TABLES) LOOP
    EXECUTE IMMEDIATE ('DROP TABLE "'||C.TABLE_NAME||'" CASCADE CONSTRAINTS');
    END LOOP;
END;
/
--해당 계정의 모든 시퀀스 삭제
BEGIN
FOR C IN (SELECT * FROM USER_SEQUENCES) LOOP
  EXECUTE IMMEDIATE 'DROP SEQUENCE '||C.SEQUENCE_NAME;
END LOOP;
END;
/
--해당 계정의 모든 뷰 삭제
BEGIN
FOR C IN (SELECT * FROM USER_VIEWS) LOOP
  EXECUTE IMMEDIATE 'DROP VIEW '||C.VIEW_NAME;
END LOOP;
END;
/
------------------------------------------------------------------



CREATE TABLE MZYM_MEMBER (
	USER_NO	NUMBER	NOT NULL,
	USER_ID	VARCHAR2(20)	NOT NULL,
	USER_PWD	VARCHAR2(30)	NOT NULL,
	USER_NAME	VARCHAR2(50)	NOT NULL,
	PHONE	VARCHAR2(13)	NOT NULL,
	RRN	VARCHAR2(20)	NOT NULL,
	EMAIL	VARCHAR2(100)	NOT NULL,
	ADDRESS	VARCHAR2(100)	NOT NULL,
	ENROLL_DATE	DATE DEFAULT SYSDATE NOT NULL,
	MODIFY_DATE	DATE	DEFAULT SYSDATE NOT NULL,
	TR_CAREER	VARCHAR2(2000)	NULL,
	CERTIFICATE	VARCHAR2(2000)	NULL,
	STATUS	CHAR(1)	DEFAULT 'Y'	 NOT NULL ,
	ASSIGN_TR	NUMBER	NULL,
	IMAGE_URL	VARCHAR2(500)	NULL
);

CREATE TABLE MZYM_NOTICE (
	NOTICE_NO	NUMBER	NOT NULL,
	NOTICE_WRITER	NUMBER	NOT NULL,
	NOTICE_TITLE	VARCHAR2(200)	NOT NULL,
	NOTICE_CONTENT	VARCHAR2(2000)	NOT NULL,
	REGIST_DATE	DATE	DEFAULT SYSDATE NOT NULL,
	EDIT_DATE	DATE	DEFAULT SYSDATE NOT NULL,
	START_DATE	VARCHAR2(100)	NOT NULL,
	STATUS	CHAR(1)	DEFAULT 'Y'	NOT NULL
);

CREATE TABLE BOARD_CATEGORY (
	CATEGORY_NO	NUMBER	NOT NULL,
	CATEGORY_NAME	VARCHAR2(30)	NOT NULL	
);

CREATE TABLE ATTACHMENT (
	FILE_NO	NUMBER	NOT NULL	,
	ATT_NO	NUMBER	NULL	,
	ATT_CATEGORY	CHAR(1)	NULL	,
	ORIGIN_NAME	VARCHAR2(100)	NOT NULL	,
	CHANGE_NAME	VARCHAR2(300)	NOT NULL	,
	FILE_PATH	VARCHAR2(500)	NULL,
	UPLORD_DATE	DATE	DEFAULT SYSDATE NULL,
	FILE_LEVEL	NUMBER	NULL,
	STATUS	CHAR(1)	DEFAULT 'Y' NULL
);

CREATE TABLE MZYM_ADVICE (
	ADVICE_NO	NUMBER	NOT NULL,
	CATEGORY_NO	NUMBER	NOT NULL,
	ADVICE_TR	NUMBER	NULL,
	ADVICE_USER	VARCHAR2(100)	NOT NULL,
	PHONE_NO	NUMBER	NOT NULL,
	ADVICE_DATE	VARCHAR2(100)	NOT NULL,
	ADVICE_CONTENT	VARCHAR2(4000)	NOT NULL,
	REGIST_DATE	DATE	DEFAULT SYSDATE NOT NULL,
	ADVICE_REPEAT	VARCHAR2(4000)	NULL,
	STATUS	CHAR(1) DEFAULT 'Y'	NOT NULL	
);

CREATE TABLE REPORT_CATEGORY (
	CATEGORY_NO	NUMBER	NOT NULL	,
	CATEGORY_NAME	VARCHAR2(10)	NOT NULL	
);

CREATE TABLE MZYM_BOARD (
	BOARD_NO	NUMBER	NOT NULL	,
	BOARD_WRITER	NUMBER	NOT NULL,
	BORAD_TYPE	NUMBER	NOT NULL	,
	BOARD_TITLE	VARCHAR2(200)	NOT NULL,
	BOARD_CONTENT	VARCHAR2(4000)	NOT NULL,
	REGIST_DATE	DATE	DEFAULT SYSDATE NULL,
	MODIFY_DATE	DATE	DEFAULT SYSDATE NULL,
	STATUS	CHAR(1)	DEFAULT 'Y'NULL,
	REVIEW_RATE	NUMBER	NULL,
	COUNT	NUMBER	DEFAULT 0 NOT NULL
);

CREATE TABLE MZYM_SERVICE (
	SERVICE_NO	NUMBER	NOT NULL,
	SERVICE_USER	NUMBER	NOT NULL,
	CATEGORY_NO	NUMBER	NOT NULL,
	SERVICE_TITLE	VARCHAR2(200)	NOT NULL,
	SERVICE_CONTENT	VARCHAR2(4000)	NOT NULL,
	REGIST_DATE	DATE	DEFAULT SYSDATE NOT NULL,
	EDIT_DATE	DATE	DEFAULT SYSDATE NOT NULL,
	SERVICE_TR	VARCHAR2(100)	NULL,
	SERVICE_REPEAT	VARCHAR2(4000)	NULL,
	REPEAT_DATE	VARCHAR2(100)	NULL,
	STATUS	CHAR(1)	DEFAULT 'Y'	NOT NULL	
);

CREATE TABLE BOARD_COMMENT (
	COMMENT_NO	NUMBER	NOT NULL,
	BOARD_NO	NUMBER	NOT NULL,
	COMMENT_WRITER	NUMBER	NOT NULL,
	USER_NAME	VARCHAR2(50)	NOT NULL,
	COMMENT_DATE	VARCHAR2(100)	DEFAULT SYSDATE	NOT NULL,
	COMMETN_CONTENT	VARCHAR2(1500)	NOT NULL	,
	STATUS	CHAR(1)	DEFAULT 'Y' NOT NULL	
);

CREATE TABLE PRODUCT (
	PRODUCT_NO	NUMBER	NOT NULL,
	RPODUCT_NAME	VARCHAR2(1000)	NOT NULL,
	PRODUCT_CONTENT	VARCHAR2(1500)	NOT NULL,
	PRODUCT_PRICE	NUMBER	NOT NULL	,
	REGIST_DATE	DATE	DEFAULT SYSDATE	 NULL	
);

CREATE TABLE MZYM_VIDEO (
	VIDEO_NO	NUMBER	NOT NULL,
	VIDEO_TITLE	VARCHAR2(200)	NOT NULL,
	LINK	VARCHAR2(200)	NOT NULL,
	STATUS	CHAR(1)	NOT NULL,
	VIDEO_LEVEL	NUMBER	NOT NULL
);

CREATE TABLE REPORT (
	REPORT_NO	NUMBER	NOT NULL,
	BOARD_NO	NUMBER	NULL	,
	COMMENT_NO	NUMBER	NULL	,
	CATEGORY_NO	NUMBER	NOT NULL,
	REPORT_USER	NUMBER	NOT NULL,
	REPORT_DATE	VARCHAR2(100)	DEFAULT SYSDATE	NOT NULL,
	STATUS	CHAR(1)	DEFAULT 'Y' NOT NULL	
);

CREATE TABLE MZYM_CALENDAR (
	CAL_NO	NUMBER	NOT NULL,
	CAL_USER	NUMBER	NOT NULL,
	CAL_TR	VARCHAR2(100)	NOT NULL,
	START_DATE	VARCHAR2(100)	NOT NULL,
	END_DATE	VARCHAR2(100)	NOT NULL,
	CAL_TITLE	VARCHAR2(200)	NOT NULL,
	CAL_CONTENT	VARCHAR2(4000) DEFAULT '내용이 없습니다.' NOT NULL	,
	CAL_COLOR	VARCHAR2(100)	NULL,
	REGIST_DATE	DATE DEFAULT SYSDATE NOT NULL	,
	MODIFY_DATE	DATE DEFAULT SYSDATE NOT NULL	,
	STATUS	CHAR(1) DEFAULT 'Y' 	NOT NULL
);

CREATE TABLE PAYMENT (
	PAYMENT_NO	NUMBER	NOT NULL	,
	PRODUCT_NO	NUMBER	NOT NULL	,
	PAYMENT_USER	NUMBER	NOT NULL,
	PAYMENT_PRICE	NUMBER	NOT NULL,
	PAYMENT_DATE	DATE	DEFAULT SYSDATE NOT NULL,
	STATUS	CHAR(1)	NOT NULL
);

CREATE TABLE FOOD (
	FOOD_NO	NUMBER	NOT NULL,
	FOOD_USER	NUMBER	NOT NULL,
	FOOD_DATE	VARCHAR2(100)	NOT NULL,
	FOOD_CATEGORY	CHAR(1)	NOT NULL,
	FOOD_NAME	VARCHAR2(100)	NOT NULL,
	FOOD_CAL	NUMBER	NOT NULL,
	REGIST_DATE	DATE	DEFAULT SYSDATE NOT NULL
);

CREATE TABLE INBODY (
	USER_NO	NUMBER	NOT NULL,
	BODY_HEIGHT	NUMBER	NULL,
	BODY_WEIGHT	NUMBER	NULL,
	BODY_METABOLISM	NUMBER	NULL,
	BODY_FAT	NUMBER	NULL,
	REGIST_DATE	DATE	DEFAULT SYSDATE NOT NULL	
);

CREATE TABLE SERVICE_CATEGORY (
	CATEGORY_NO	NUMBER	NOT NULL,
	CATEGORY_NAME	VARCHAR2(50)	NOT NULL
);

CREATE TABLE ADVICE_CATEGORY (
	CATEGORY_NO	NUMBER	NOT NULL,
	CATEGORY_NAME	VARCHAR2(50)	NOT NULL
);

ALTER TABLE MZYM_MEMBER ADD CONSTRAINT PK_MZYM_MEMBER PRIMARY KEY (
	USER_NO
);

ALTER TABLE MZYM_NOTICE ADD CONSTRAINT PK_MZYM_NOTICE PRIMARY KEY (
	NOTICE_NO
);

ALTER TABLE BOARD_CATEGORY ADD CONSTRAINT PK_BOARD_CATEGORY PRIMARY KEY (
	CATEGORY_NO
);

ALTER TABLE ATTACHMENT ADD CONSTRAINT PK_ATTACHMENT PRIMARY KEY (
	FILE_NO
);

ALTER TABLE MZYM_ADVICE ADD CONSTRAINT PK_MZYM_ADVICE PRIMARY KEY (
	ADVICE_NO
);

ALTER TABLE REPORT_CATEGORY ADD CONSTRAINT PK_REPORT_CATEGORY PRIMARY KEY (
	CATEGORY_NO
);

ALTER TABLE MZYM_BOARD ADD CONSTRAINT PK_MZYM_BOARD PRIMARY KEY (
	BOARD_NO
);

ALTER TABLE MZYM_SERVICE ADD CONSTRAINT PK_MZYM_SERVICE PRIMARY KEY (
	SERVICE_NO
);

ALTER TABLE BOARD_COMMENT ADD CONSTRAINT PK_BOARD_COMMENT PRIMARY KEY (
	COMMENT_NO
);

ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (
	PRODUCT_NO
);

ALTER TABLE MZYM_VIDEO ADD CONSTRAINT PK_MZYM_VIDEO PRIMARY KEY (
	VIDEO_NO
);

ALTER TABLE REPORT ADD CONSTRAINT PK_REPORT PRIMARY KEY (
	REPORT_NO
);

ALTER TABLE MZYM_CALENDAR ADD CONSTRAINT PK_MZYM_CALENDAR PRIMARY KEY (
	CAL_NO
);

ALTER TABLE PAYMENT ADD CONSTRAINT PK_PAYMENT PRIMARY KEY (
	PAYMENT_NO
);

ALTER TABLE FOOD ADD CONSTRAINT PK_FOOD PRIMARY KEY (
	FOOD_NO
);

ALTER TABLE INBODY ADD CONSTRAINT PK_INBODY PRIMARY KEY (
	USER_NO
);

ALTER TABLE SERVICE_CATEGORY ADD CONSTRAINT PK_SERVICE_CATEGORY PRIMARY KEY (
	CATEGORY_NO
);

ALTER TABLE ADVICE_CATEGORY ADD CONSTRAINT PK_ADVICE_CATEGORY PRIMARY KEY (
	CATEGORY_NO
);

ALTER TABLE MZYM_NOTICE ADD CONSTRAINT FK_MEMBER_TO_NOTICE_1 FOREIGN KEY (
	NOTICE_WRITER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE MZYM_ADVICE ADD CONSTRAINT FK_CATEGORY_TO_ADVICE_1 FOREIGN KEY (
	CATEGORY_NO
)
REFERENCES ADVICE_CATEGORY (
	CATEGORY_NO
);

ALTER TABLE MZYM_ADVICE ADD CONSTRAINT FK_MEMBER_TO_ADVICE_1 FOREIGN KEY (
	ADVICE_TR
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE MZYM_BOARD ADD CONSTRAINT FK_MEMBER_TO_BOARD_1 FOREIGN KEY (
	BOARD_WRITER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE MZYM_BOARD ADD CONSTRAINT FK_CATEGORY_TO_BOARD_1 FOREIGN KEY (
	BORAD_TYPE
)
REFERENCES BOARD_CATEGORY (
	CATEGORY_NO
);

ALTER TABLE MZYM_SERVICE ADD CONSTRAINT FK_MEMBER_TO_SERVICE_1 FOREIGN KEY (
	SERVICE_USER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE MZYM_SERVICE ADD CONSTRAINT FK_CATEGORY_TO_SERVICE_1 FOREIGN KEY (
	CATEGORY_NO
)
REFERENCES SERVICE_CATEGORY (
	CATEGORY_NO
);

ALTER TABLE BOARD_COMMENT ADD CONSTRAINT FK_BOARD_TO_COMMENT_1 FOREIGN KEY (
	BOARD_NO
)
REFERENCES MZYM_BOARD (
	BOARD_NO
);

ALTER TABLE BOARD_COMMENT ADD CONSTRAINT FK_MEMBER_TO_COMMENT_1 FOREIGN KEY (
	COMMENT_WRITER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE REPORT ADD CONSTRAINT FK_MZYM_BOARD_TO_REPORT_1 FOREIGN KEY (
	BOARD_NO
)
REFERENCES MZYM_BOARD (
	BOARD_NO
);

ALTER TABLE REPORT ADD CONSTRAINT FK_BOARD_COMMENT_TO_REPORT_1 FOREIGN KEY (
	COMMENT_NO
)
REFERENCES BOARD_COMMENT (
	COMMENT_NO
);

ALTER TABLE REPORT ADD CONSTRAINT FK_REPORT_CATEGORY_TO_REPORT_1 FOREIGN KEY (
	CATEGORY_NO
)
REFERENCES REPORT_CATEGORY (
	CATEGORY_NO
);

ALTER TABLE REPORT ADD CONSTRAINT FK_MZYM_MEMBER_TO_REPORT_1 FOREIGN KEY (
	REPORT_USER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE MZYM_CALENDAR ADD CONSTRAINT FK_MEMBER_TO_CALENDAR_1 FOREIGN KEY (
	CAL_USER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE PAYMENT ADD CONSTRAINT FK_PRODUCT_TO_PAYMENT_1 FOREIGN KEY (
	PRODUCT_NO
)
REFERENCES PRODUCT (
	PRODUCT_NO
);

ALTER TABLE PAYMENT ADD CONSTRAINT FK_MZYM_MEMBER_TO_PAYMENT_1 FOREIGN KEY (
	PAYMENT_USER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE FOOD ADD CONSTRAINT FK_MZYM_MEMBER_TO_FOOD_1 FOREIGN KEY (
	FOOD_USER
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

ALTER TABLE INBODY ADD CONSTRAINT FK_MZYM_MEMBER_TO_INBODY_1 FOREIGN KEY (
	USER_NO
)
REFERENCES MZYM_MEMBER (
	USER_NO
);

